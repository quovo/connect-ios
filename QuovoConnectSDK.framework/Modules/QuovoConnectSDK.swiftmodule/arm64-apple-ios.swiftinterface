// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target arm64-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name QuovoConnectSDK
import Foundation
@_exported import QuovoConnectSDK
import Swift
import UIKit
import WebKit
@_inheritsConvenienceInitializers public class QuovoPfmSDK : QuovoConnectSDK.QuovoSDK {
  override public convenience init()
  required public init(coder aDecoder: Foundation.NSCoder)
  public func launch(token: Swift.String, options: Foundation.NSDictionary = [:], module: Swift.String, customHost: Swift.String? = nil, subdomain: Swift.String? = nil, accountId: Swift.String? = nil)
  public func generateView(token: Swift.String, options: Foundation.NSDictionary = [:], module: Swift.String, customHost: Swift.String? = nil, subdomain: Swift.String? = nil, accountId: Swift.String? = nil) -> UIKit.UIView
  @objc deinit
}
@_inheritsConvenienceInitializers public class QuovoConnectSDK : QuovoConnectSDK.QuovoSDK {
  public static var launched: Swift.Bool
  override public convenience init()
  required public init(coder aDecoder: Foundation.NSCoder)
  public func setSubdomain(subdomain: Swift.String)
  public func launch(token: Swift.String, options: Foundation.NSDictionary = [:], subdomain: Swift.String? = nil)
  public func generateView(token: Swift.String, options: Foundation.NSDictionary = [:], subdomain: Swift.String? = nil) -> UIKit.UIView
  @objc deinit
}
@_hasMissingDesignatedInitializers public class QuovoSDK {
  public static var QUOVOERROR_CODE_MISSING_TOKEN: Swift.Int
  public static var QUOVOERROR_CODE_ALREADY_RUNNING: Swift.Int
  public static var QUOVOERROR_CODE_INVALID_ACCOUNT_ID: Swift.Int
  required public init(coder aDecoder: Foundation.NSCoder)
  public var completionHandler: (Swift.String, Foundation.NSDictionary) -> Swift.Void
  public var errorHandler: (Swift.String, Swift.Int, Swift.String) -> Swift.Void
  weak public var parentViewController: UIKit.UIViewController?
  public func enableDebugLogging(enableLogging: Swift.Bool)
  public func customizeNavigationBarApperance(isTranslucent: Swift.Bool, backGroundColor: UIKit.UIColor, customTitle: Swift.String)
  public func setTimeoutLength(seconds: Foundation.TimeInterval)
  public static func close()
  public static func nilOrNotEmpty(_ str: Swift.String?) -> Swift.String?
  @objc deinit
}
